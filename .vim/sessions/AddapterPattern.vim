" ~/.vim/sessions/AddapterPattern.vim:
" Vim session script.
" Created by session.vim 2.13.1 on 28 December 2018 at 00:10:32.
" Open this file in Vim and run :source % to restore your session.

if exists('g:syntax_on') != 1 | syntax on | endif
if exists('g:did_load_filetypes') != 1 | filetype on | endif
if exists('g:did_load_ftplugin') != 1 | filetype plugin on | endif
if exists('g:did_indent_on') != 1 | filetype indent on | endif
if &background != 'dark'
	set background=dark
endif
if !exists('g:colors_name') || g:colors_name != 'onedark' | colorscheme onedark | endif
call setqflist([])
let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Desktop/practice/java/DesignPatterns/AddapterPattern
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +1 src/org/AddapterPattern/DuckTestDrive.java
badd +44 src/org/IteratorAndCompositePattern/MenuItem.java
badd +34 src/org/IteratorAndCompositePattern/DinerMenu.java
badd +20 src/org/IteratorAndCompositePattern/Waitress.java
badd +48 src/org/IteratorAndCompositePattern/MenuTestDrive.java
badd +6 src/org/IteratorAndCompositePattern/DinerMenuIterator.java
badd +27 src/org/IteratorAndCompositePattern/Menu.java
badd +6 src/org/IteratorAndCompositePattern/CafeMenu.java
badd +1 src/org/IteratorAndCompositePatter/MenuComponent.java
badd +39 src/org/IteratorAndCompositePattern/MenuComponent.java
badd +1 tags
badd +1 src/org/IteratorAndCompositePattern/CompositeIterator.java
badd +1 src/org/IteratorAndCompositePattern/NullIterator.java
badd +1 src/org/SingletonPattern/GumballMachine.java
badd +3 src/org/StatePattern/GumballMachine.java
badd +1 /private/var/folders/8z/hkg027ls7_90ky217x8f5rfm0000gn/T/BeverageTestDrive.java
argglobal
silent! argdel *
$argadd src/org/AddapterPattern/DuckTestDrive.java
edit src/org/IteratorAndCompositePattern/Menu.java
set splitbelow splitright
set nosplitright
wincmd t
set winminheight=1 winminwidth=1 winheight=1 winwidth=1
argglobal
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=3
setlocal nofen
let s:l = 27 - ((20 * winheight(0) + 20) / 40)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
27
normal! 0
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
"   silent exe 'bwipe ' . s:wipebuf
endif
" unlet! s:wipebuf
set winheight=1 winwidth=1 winminheight=1 winminwidth=1 shortmess=aoO
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save

" Support for special windows like quick-fix and plug-in windows.
" Everything down here is generated by vim-session (not supported
" by :mksession out of the box).

1wincmd w
tabnext 1
if exists('s:wipebuf')
  if empty(bufname(s:wipebuf))
if !getbufvar(s:wipebuf, '&modified')
  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')
  if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
    silent execute 'bwipeout' s:wipebuf
  endif
endif
  endif
endif
doautoall SessionLoadPost
unlet SessionLoad
" vim: ft=vim ro nowrap smc=128
