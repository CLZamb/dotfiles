" ~/.vim/sessions/t_08.vim:
" Vim session script.
" Created by session.vim 2.13.1 on 06 November 2018 at 18:35:30.
" Open this file in Vim and run :source % to restore your session.

if exists('g:syntax_on') != 1 | syntax on | endif
if exists('g:did_load_filetypes') != 1 | filetype on | endif
if exists('g:did_load_ftplugin') != 1 | filetype plugin on | endif
if exists('g:did_indent_on') != 1 | filetype indent on | endif
if &background != 'dark'
	set background=dark
endif
if !exists('g:colors_name') || g:colors_name != 'onedark' | colorscheme onedark | endif
call setqflist([])
let SessionLoad = 1
let s:so_save = &so | let s:siso_save = &siso | set so=0 siso=0
let v:this_session=expand("<sfile>:p")
silent only
cd ~/Desktop/practice/appAcademy/coding-test-1
if expand('%') == '' && !&modified && line('$') <= 1 && getline(1) == ''
  let s:wipebuf = bufnr('%')
endif
set shortmess=aoO
badd +174 ~/.vim/vim_settings/mapping.vim
badd +2 lib/00_hello.rb
badd +5 lib/01_temperature.rb
badd +62 spec/01_temperature_spec.rb
badd +93 ~/.vimrc
badd +24 lib/03_simon_says.rb
badd +84 spec/03_simon_says_spec.rb
badd +1 lib/02_calculator.rb
badd +1 ~/.vim/sessions/default.vim
badd +3 lib/04_pig_latin.rb
badd +28 spec/04_pig_latin_spec.rb
badd +5 ~/.vim/bundle/ultisnips/snippets/ruby.snippets
badd +718 ~/.vim/pack/packager/start/vim-snippets/snippets/ruby.snippets
badd +1 ~/.vim/bundle/ultisnips/snippets/snippets.snippets
badd +18 ~/.vim/vim_settings/functions.vim
badd +1 ~/.ctags
badd +9 lib/05_silly_blocks.rb
badd +50 spec/05_silly_blocks_spec.rb
badd +972 /usr/local/Cellar/neovim/0.3.1/share/nvim/runtime/doc/options.txt
badd +1 Flavorfile.lock
badd +141 ~/.vim/pack/packager/start/mru/doc/mru.txt
badd +43 spec/06_performance_monitor_spec.rb
badd +5 lib/06_performance_monitor.rb
badd +4 doc/js/jquery.js
badd +119 spec/00_hello_spec.rb
badd +99 spec/07_hello_friend_spec.rb
badd +7 lib/07_hello_friend.rb
badd +6 lib/08_book_titles.rb
badd +1 spec/08_book_titles_spec.rb
badd +3 lib/09_timer.rb
badd +19 spec/09_timer_spec.rb
badd +1 ~/Desktop/practice/Schedule.txt
badd +1 ~/Desktop/practice/ruby/practic_inter.rb
badd +62 /usr/local/Cellar/neovim/0.3.1/share/nvim/runtime/tutor/en/vim-01-beginner.tutor
badd +1 tags
badd +14 doc/index.html
badd +666 ~/.vim/pack/packager/start/ale/doc/ale.txt
badd +32 lib/10_temperature_object.rb
badd +85 spec/10_temperature_object_spec.rb
badd +1 spec/11_dictionary_spec.rb
badd +26 lib/11_dictionary.rb
badd +1 term://.//57912:/usr/local/bin/zsh
badd +9426 /usr/local/Cellar/neovim/0.3.1/share/nvim/runtime/doc/eval.txt
badd +2 does\ not\ exist:\ /Users/cristofher/.config/nvim/snippets/ruby.snippets
badd +1 does\ not\ exist:\ /Users/cristofher/.vim/snippets/ruby.snippets
badd +2 ~/.vim/snippets/ruby.snippets
badd +288 ~/.vim/pack/packager/start/vim-snippets/snippets/_.snippets
badd +1 ~/.vim/pack/packager/start/vim-snippets/snippets/snippets.snippets
badd +1 ~/.vim/snippets/\*.snippets/ruby.snip
badd +4 ~/.vim/snippets/ruby.snip
badd +0 ~/Desktop/practice/ruby/well_grounded_rubist/ex_04.rb
argglobal
silent! argdel *
edit spec/11_dictionary_spec.rb
set splitbelow splitright
wincmd _ | wincmd |
vsplit
1wincmd h
wincmd w
set nosplitbelow
set nosplitright
wincmd t
set winminheight=1 winminwidth=1 winheight=1 winwidth=1
exe 'vert 1resize ' . ((&columns * 79 + 79) / 158)
exe 'vert 2resize ' . ((&columns * 78 + 79) / 158)
argglobal
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=3
setlocal nofen
let s:l = 18 - ((17 * winheight(0) + 18) / 37)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
18
normal! 0
wincmd w
argglobal
if bufexists('lib/11_dictionary.rb') | buffer lib/11_dictionary.rb | else | edit lib/11_dictionary.rb | endif
setlocal fdm=indent
setlocal fde=0
setlocal fmr={{{,}}}
setlocal fdi=#
setlocal fdl=0
setlocal fml=1
setlocal fdn=3
setlocal nofen
let s:l = 10 - ((9 * winheight(0) + 18) / 37)
if s:l < 1 | let s:l = 1 | endif
exe s:l
normal! zt
10
normal! 0
wincmd w
exe 'vert 1resize ' . ((&columns * 79 + 79) / 158)
exe 'vert 2resize ' . ((&columns * 78 + 79) / 158)
tabnext 1
if exists('s:wipebuf') && getbufvar(s:wipebuf, '&buftype') isnot# 'terminal'
"   silent exe 'bwipe ' . s:wipebuf
endif
" unlet! s:wipebuf
set winheight=1 winwidth=20 winminheight=1 winminwidth=1 shortmess=filnxtToOFc
let s:sx = expand("<sfile>:p:r")."x.vim"
if file_readable(s:sx)
  exe "source " . fnameescape(s:sx)
endif
let &so = s:so_save | let &siso = s:siso_save

" Support for special windows like quick-fix and plug-in windows.
" Everything down here is generated by vim-session (not supported
" by :mksession out of the box).

1wincmd w
tabnext 1
if exists('s:wipebuf')
  if empty(bufname(s:wipebuf))
if !getbufvar(s:wipebuf, '&modified')
  let s:wipebuflines = getbufline(s:wipebuf, 1, '$')
  if len(s:wipebuflines) <= 1 && empty(get(s:wipebuflines, 0, ''))
    silent execute 'bwipeout' s:wipebuf
  endif
endif
  endif
endif
doautoall SessionLoadPost
unlet SessionLoad
" vim: ft=vim ro nowrap smc=128
